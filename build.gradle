plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id "de.undercouch.download" version "4.0.0"
}

ext {
    bouncycastleVersion = '1.61'
    jacksonVersion = '2.8.5'
    javapoetVersion = '1.7.0'
    jnr_unixsocketVersion = '0.21'
    okhttpVersion = '3.8.1'
    rxjavaVersion = '2.2.2'
    slf4jVersion = '1.7.25'
    javaWebSocketVersion = '1.3.8'
    picocliVersion = '3.0.0'

    // test dependencies
    equalsverifierVersion = '3.1.10'
    junitVersion = '5.5.2'
    junitBenchmarkVersion = '0.7.2'
    logbackVersion = '1.2.3'
    mockitoJunitVersion = "3.1.0"

    ktlintVersion = '0.31.0'
}


description 'web3j base project'

nexusStaging {
    username System.getenv('OSSRH_USERNAME')
    password System.getenv('OSSRH_PASSWORD')
}

allprojects {
    apply {
        [
            'java',
            'javadoc',
            'repositories',
            'spotless'
        ].each { buildScript ->
            download {
                src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
                dest "$rootDir/gradle/$buildScript/build.gradle"
                overwrite true
                quiet true
                onlyIfModified true
            }
            from("$rootDir/gradle/$buildScript/build.gradle")
        }
    }

    tasks.withType(Test) {
        reports.html.destination = file("${reporting.baseDir}/${name}")
    }

    dependencies {
        implementation("com.github.shyiko:ktlint:${ktlintVersion}") { exclude group: 'org.slf4j' }

        testCompile "org.junit.jupiter:junit-jupiter:$junitVersion"
        testCompile "org.mockito:mockito-junit-jupiter:$mockitoJunitVersion"
    }

    if (project.name != 'integration-tests') {
        apply {
            download {
                src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/publish/build.gradle"
                dest "$rootDir/gradle/publish/build.gradle"
                overwrite true
                quiet true
                onlyIfModified true
            }
            from("$rootDir/gradle/publish/build.gradle")
        }
    }
}
configure(subprojects.findAll { it.name != 'integration-tests' }) {
    apply from: "$rootDir/gradle/jacoco/build.gradle"
}
