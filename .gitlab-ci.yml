image: gradle:4.10.2

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

stages:
- build
- release
- publish
- github
- downstream

build:
  stage: build
  script:
  - ./gradlew clean check
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - scripts/**

snapshot:
  variables:
    OSSRH_REPO_URL: $SNAPSHOT_OSSRH_REPO_URL
  stage: release
  script:
  - ./gradlew release
  only:
    refs:
      - master

release:
  variables:
    OSSRH_REPO_URL: $RELEASE_OSSRH_REPO_URL
  stage: release
  script:
  - ./gradlew -Pversion=${CI_COMMIT_REF_NAME//release\/} release -x bintrayPublish
  only:
    refs:
      - /^release\/(\d*).(\d*).(\d*)/

publish:
  variables:
    OSSRH_REPO_URL: $RELEASE_OSSRH_REPO_URL
  stage: publish
  script:
    - ./gradlew -Pversion=${CI_COMMIT_REF_NAME//release\/} bintrayPublish
  only:
    refs:
      - /^release\/(\d*).(\d*).(\d*)/

githubRelease:
  stage: github
  script:
  - ./gradlew -Pversion=${CI_COMMIT_REF_NAME//release\/} console:githubRelease
  only:
    refs:
      - /^release\/(\d*).(\d*).(\d*)/

homebrew:
  stage: downstream
  variables:
    GIT_STRATEGY: none
  script:
    - ./scripts/update-homebrew.sh
  only:
    refs:
      - /^release\/(\d*).(\d*).(\d*)/

dependants:
  stage: downstream
  variables:
    GIT_STRATEGY: none
  script:
    - ./scripts/build-dependant.sh quorum
  only:
    refs:
      - /^release\/(\d*).(\d*).(\d*)/
